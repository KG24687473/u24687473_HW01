@model u24687473_HW01.Models.Booking
@{
    ViewBag.Title = "Emergency Booking";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title - RescueBus</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Shared CSS variables and base styles from Index */
        :root {
            --primary: #0066cc;
            --primary-dark: #0052a3;
            --emergency: #e63946;
            --emergency-dark: #c53030;
            --dark: #2d3748;
            --medium: #4a5568;
            --light: #f7fafc;
            --white: #ffffff;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 15px rgba(0,0,0,0.1);
            --radius-sm: 4px;
            --radius-md: 8px;
            --radius-lg: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }

        body {
            line-height: 1.6;
            color: var(--dark);
            background-color: var(--light);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        /* Navigation - Same as Index */
        .navbar {
            background: linear-gradient(135deg, var(--dark) 0%, #1a202c 100%);
            color: var(--white);
            padding: 1rem 0;
            box-shadow: var(--shadow-md);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        /* Emergency Booking Specific Styles */
        .booking-header {
            text-align: center;
            margin: 3rem 0 2rem;
        }

        .confirmation-badge {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 3rem;
        }

        .bg-emergency {
            background-color: var(--emergency);
            color: white;
        }

        .booking-header h1 {
            font-size: 2.25rem;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        .booking-header .subtitle {
            color: var(--medium);
            font-size: 1.1rem;
        }

        .booking-form {
            background: var(--white);
            border-radius: var(--radius-lg);
            padding: 2.5rem;
            box-shadow: var(--shadow-sm);
            margin: 2rem auto;
            max-width: 800px;
        }

        .form-section {
            margin-bottom: 2.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .form-section h2 {
            font-size: 1.3rem;
            color: var(--dark);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.75rem;
            font-weight: 500;
            color: var(--dark);
        }

        .form-control {
            width: 100%;
            padding: 0.9rem;
            border: 1px solid #e2e8f0;
            border-radius: var(--radius-md);
            font-size: 1rem;
            transition: all 0.2s;
            background-color: #f8fafc;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--emergency);
            box-shadow: 0 0 0 3px rgba(230,57,70,0.1);
            background: white;
        }

        textarea.form-control {
            min-height: 150px;
            resize: vertical;
        }

        .form-actions {
            margin-top: 2rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.9rem 1.75rem;
            border-radius: var(--radius-md);
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            border: none;
            width: 100%;
            justify-content: center;
        }

        .btn-emergency {
            background: var(--emergency);
            color: white;
        }

        .btn-emergency:hover {
            background: var(--emergency-dark);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .field-validation-error {
            color: var(--emergency);
            font-size: 0.85rem;
            margin-top: 0.5rem;
            display: block;
        }

        .input-validation-error {
            border-color: var(--emergency) !important;
        }

        /* Responsive Adjustments */

            .booking-header h1 {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    <header class="navbar">
        <div class="nav-container">
            <a href="/" class="nav-logo">
                <i class="fas fa-ambulance"></i>
                <span>RescueBus</span>
            </a>
            <div class="nav-links">
                <a href="@Url.Action("Index", "Home")" class="nav-link">
                    <i class="fas fa-home"></i> Home
                </a>
                <a href="@Url.Action("RideHistory", "Home")" class="nav-link">
                    <i class="fas fa-history"></i> Ride History
                </a>
                <a href="@Url.Action("SelectService", "Booking")" class="nav-cta">
                    <i class="fas fa-ambulance"></i> Book Now
                </a>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="booking-header">
            <div class="confirmation-badge bg-emergency">
                <i class="fas fa-bolt"></i>
            </div>
            <h1>EMERGENCY MEDICAL REQUEST</h1>
            <p class="subtitle">Please provide emergency contact and location information</p>
        </div>

        @using (Html.BeginForm("Emergency", "Booking", FormMethod.Post, new { @class = "booking-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.IsEmergency, new { Value = "true" })
            @Html.HiddenFor(m => m.ServiceType, new { Value = "Emergency Response" })
            @Html.HiddenFor(m => m.DriverId, new { Value = "EMER-" + DateTime.Now.Minute.ToString("D2") })
            @Html.HiddenFor(m => m.VehicleId, new { Value = "EMER-" + DateTime.Now.Second.ToString("D2") })

            <div class="form-section">
                <h2><i class="fas fa-user"></i> Patient Information</h2>
                <div class="form-group">
                    @Html.LabelFor(m => m.PatientName, "Full Name")
                    @Html.TextBoxFor(m => m.PatientName, new { @class = "form-control", placeholder = "Patient's full name", required = "required" })
                    @Html.ValidationMessageFor(m => m.PatientName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactNumber, "Phone Number")
                    @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", placeholder = "Emergency contact number", required = "required" })
                    @Html.ValidationMessageFor(m => m.ContactNumber)
                </div>
            </div>

            <div class="form-section">
                <h2><i class="fas fa-map-marker-alt"></i> Emergency Location</h2>
                <div class="form-group">
                    @Html.LabelFor(m => m.Location, "Exact Location")
                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control", placeholder = "Address or GPS coordinates", required = "required" })
                    @Html.ValidationMessageFor(m => m.Location)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MedicalCondition, "Emergency Details")
                    @Html.TextAreaFor(m => m.MedicalCondition, new
                    {
                        @class = "form-control",
                        placeholder = "Describe the emergency situation",
                        required = "required",
                        rows = 5
                    })
                    @Html.ValidationMessageFor(m => m.MedicalCondition)
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-emergency">
                    <i class="fas fa-bolt"></i> REQUEST EMERGENCY RESPONSE
                </button>
            </div>
        }
    </div>

    <script>
        // Get current location if possible
        document.addEventListener('DOMContentLoaded', function () {
            if (navigator.geolocation) {
                const locationField = document.getElementById('Location');
                const locationButton = document.createElement('button');
                locationButton.type = 'button';
                locationButton.innerHTML = '<i class="fas fa-location-crosshairs"></i> Use Current Location';
                locationButton.style.marginTop = '0.5rem';
                locationButton.style.padding = '0.5rem';
                locationButton.style.background = 'var(--light)';
                locationButton.style.border = '1px solid var(--primary)';
                locationButton.style.borderRadius = 'var(--radius-sm)';
                locationButton.style.cursor = 'pointer';
                locationButton.addEventListener('click', function () {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        locationField.value = `Lat: ${position.coords.latitude}, Long: ${position.coords.longitude}`;
                    }, function (error) {
                        alert('Unable to get your location: ' + error.message);
                    });
                });
                locationField.parentNode.appendChild(locationButton);
            }

            // Form validation
            document.querySelector('form').addEventListener('submit', function (e) {
                const requiredFields = this.querySelectorAll('[required]');
                let isValid = true;

                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        field.style.borderColor = 'var(--emergency)';
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    alert('Please fill in all required fields');
                } else if (!confirm('Are you sure you want to request emergency response?')) {
                    e.preventDefault();
                }
            });
        });
    </script>
</body>
</html>
