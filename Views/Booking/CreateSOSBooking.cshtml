@model u24687473_HW01.Models.Booking
@{
    ViewBag.Title = "Emergency SOS Booking";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title - RescueBus</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #e63946;
            --primary-dark: #c53030;
            --emergency: #e63946;
            --emergency-dark: #c53030;
            --dark: #2d3748;
            --medium: #4a5568;
            --light: #f7fafc;
            --white: #ffffff;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 15px rgba(0,0,0,0.1);
            --radius-sm: 4px;
            --radius-md: 8px;
            --radius-lg: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }

        body {
            line-height: 1.6;
            color: var(--dark);
            background-color: #fff8f8;
        }

        .container {
            margin: 0 auto;
            max-width: 1200px;
            padding: 0 2rem;
        }

        .navbar {
            background: linear-gradient(135deg, var(--dark) 0%, #1a202c 100%);
            color: var(--white);
            height: 80px;
            display: flex;
            align-items: center;
            box-shadow: var(--shadow-md);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .nav-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            width: 100%;
        }

        .nav-logo {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 1.75rem;
            font-weight: 600;
            color: var(--white);
            text-decoration: none;
        }

        .logo-img {
            height: 40px;
            width: auto;
            display: block;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
        }

        .nav-link {
            color: var(--white);
            font-weight: 500;
            text-decoration: none;
        }

            .nav-link:hover {
                color: var(--primary);
            }

        .nav-cta {
            background-color: var(--emergency);
            color: white !important;
            padding: 0.6rem 1.5rem;
            border-radius: var(--radius-md);
            transition: all 0.3s ease;
        }

            .nav-cta:hover {
                background-color: var(--emergency-dark);
                transform: translateY(-2px);
            }

        .booking-header {
            text-align: center;
            margin: 3rem 0 2rem;
        }

            .booking-header h1 {
                font-size: 2.5rem;
                color: var(--emergency);
                margin-bottom: 0.5rem;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.75rem;
            }

            .booking-header .subtitle {
                color: var(--emergency-dark);
                font-size: 1.1rem;
                font-weight: 500;
            }

        .emergency-alert {
            background-color: #fff8f8;
            border-left: 4px solid var(--emergency);
            padding: 1rem;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            border-radius: var(--radius-sm);
        }

        /* Form styles */
        .booking-form {
            background: var(--white);
            border-radius: var(--radius-lg);
            padding: 2.5rem;
            box-shadow: var(--shadow-sm);
            margin: 2rem auto;
            max-width: 800px;
            border: 1px solid #ffecec;
        }

        .form-section {
            margin-bottom: 2.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(230, 57, 70, 0.1);
        }

            .form-section h2 {
                font-size: 1.3rem;
                color: var(--emergency-dark);
                margin-bottom: 1.5rem;
                display: flex;
                align-items: center;
                gap: 0.75rem;
            }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

            .form-group label {
                display: block;
                margin-bottom: 0.75rem;
                font-weight: 500;
                color: var(--dark);
            }

        .form-control {
            width: 100%;
            padding: 0.9rem;
            border: 1px solid #ffecec;
            border-radius: var(--radius-md);
            font-size: 1rem;
            transition: all 0.2s;
            background-color: #fff8f8;
        }

            .form-control:focus {
                outline: none;
                border-color: var(--emergency);
                box-shadow: 0 0 0 3px rgba(230, 57, 70, 0.1);
                background: white;
            }

        textarea.form-control {
            min-height: 150px;
            resize: vertical;
        }

        .form-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.9rem 1.75rem;
            border-radius: var(--radius-md);
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            border: none;
        }

        .btn-primary {
            background: var(--emergency);
            color: white;
        }

            .btn-primary:hover {
                background: var(--emergency-dark);
                transform: translateY(-2px);
                box-shadow: var(--shadow-md);
            }

        .field-validation-error {
            color: var(--emergency);
            font-size: 0.85rem;
            margin-top: 0.5rem;
            display: block;
        }

        .input-validation-error {
            border-color: var(--emergency) !important;
        }

        .form-actions {
            flex-direction: column;
            gap: 1rem;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="booking-header">
            <h1>
                <i class="fas fa-bolt"></i>
                SOS Booking
            </h1>
            <p class="subtitle">Priority Booking</p>
        </div>

        @using (Html.BeginForm("CreateBooking", "Booking", FormMethod.Post, new { @class = "booking-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.ServiceType, new { Value = "Emergency Response" })
            @Html.HiddenFor(m => m.IsEmergency, new { Value = true })

            <div class="form-section">
                <h2><i class="fas fa-calendar-alt"></i> Emergency Details</h2>
                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PatientName, "Patient Name")
                        @Html.TextBoxFor(m => m.PatientName, new
                        {
                            @class = "form-control",
                            placeholder = "Patient's full name",
                            required = "required"
                        })
                        @Html.ValidationMessageFor(m => m.PatientName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ContactNumber, "Contact Number")
                        @Html.TextBoxFor(m => m.ContactNumber, new
                        {
                            @class = "form-control",
                            placeholder = "083 123 4598",
                            required = "required"
                        })
                        @Html.ValidationMessageFor(m => m.ContactNumber)
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Location, "Pickup Address")
                        @Html.TextBoxFor(m => m.Location, new
                        {
                            @class = "form-control",
                            placeholder = "123 Main Street",
                            required = "required"
                        })
                        @Html.ValidationMessageFor(m => m.Location)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MedicalCondition, "Emergency Type")
                        @Html.DropDownListFor(m => m.MedicalCondition, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Cardiac Arrest", Value = "Cardiac Arrest" },
                            new SelectListItem { Text = "Traumatic Injury", Value = "Traumatic Injury" },
                            new SelectListItem { Text = "Stroke Symptoms", Value = "Stroke Symptoms" },
                            new SelectListItem { Text = "Respiratory Distress", Value = "Respiratory Distress" },
                            new SelectListItem { Text = "Severe Bleeding", Value = "Severe Bleeding" },
                            new SelectListItem { Text = "Other Life-Threatening", Value = "Other" }
                        }, "Select Emergency Type", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.MedicalCondition)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MedicalCondition, "Additional Details")
                    @Html.TextAreaFor(m => m.MedicalCondition, new
                    {
                        @class = "form-control",
                        placeholder = "Describe the emergency situation",
                        rows = 3,
                        required = "required"
                    })
                    @Html.ValidationMessageFor(m => m.MedicalCondition)
                </div>
            </div>
            @Html.HiddenFor(m => m.DriverId, new { Value = "DR-ALS1" })
            @Html.HiddenFor(m => m.VehicleId, new { Value = "VH-ALS2" })
            @Html.HiddenFor(m => m.PickupTime, new { Value = DateTime.Now.ToString("yyyy-MM-ddTHH:mm") })

            <div class="form-actions">
                <button type="submit" class="btn btn-primary" style="width: 100%;">
                    <i class="fas fa-bolt"></i> Dispatch Available Team
                </button>
            </div>
        }
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelector('form').addEventListener('submit', function (e) {
                const requiredFields = this.querySelectorAll('[required]');
                let isValid = true;

                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        field.classList.add('input-validation-error');
                        isValid = false;
                    } else {
                        field.classList.remove('input-validation-error');
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    alert('Please fill in all required emergency information');
                } else {
                    if (confirm('CONFIRM EMERGENCY DISPATCH\n\nThis will alert the emergency response team immediately.')) {
                        return true;
                    } else {
                        e.preventDefault();
                    }
                }
            });
        });
    </script>
</body>
</html>
